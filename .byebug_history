c
selector
c
selector
c
selector
n
selector
n
c
n
selector
n
c
$2
$1
$0
a.to_s[/(\w*)\.(\w*)/]
a
$1
a.to_s[/(\w)\.(\w)/]
$6
$5
$4
$4รง
$3
$2
$0
$1
/messages/.match(a)
a = "messages.body"
@conversation.errors.messages.each {|input, msg| msg.each { |m| puts "#{input}: #{m}"  } }
c
b = /./.match(a) 
/./.match(a) ? 'true' : 'false'
/caca/.match(a) ? 'true' : 'false'
/messages/.match(a) ? 'true' : 'false'
if (/messages/.match(a)) { puts 'true' } else {puts 'false'} end
if /messages/.match(a) { puts 'true' } else {puts 'false'} end
if /messages/.match(a) { puts 'true' } else puts 'false' end
if /messages/.match(a)
/messages/.match(a)
a = "messages.body"
a = messages.body
@conversation.errors.messages.each {|input, msg| msg.each { |m| puts "#{input}: #{m}"  } }
@conversation.errors.messages
@conversation.errors
c
n
c
@conversation.errors.messages.first.first.to_s
@conversation.errors.messages.first
@conversation.errors.messages
@conversation.errors
@conversation
c
u.created_events.where("date >= ?", start_date.to_s).where("date <= ?", finish_date.to_s(:db))
u.created_events.where("date >= ?", start_date.to_s).where("date <= ?", finish_date.to_s)
u.created_events
u.created_events.where("date >= ?", start_date.to_s(:default)).where("date <= ?", finish_date.to_s(:default))
u = User.find 7
u.created_events.where("date >= ?", start_date.to_s(:default)).where("date >= ?", start_date.to_s(:default))
events
n
events
n
events
n
events
n
model
n
c
exit
search.name.present?
u.created_events.where("date >= ?", start_date.to_s(:default))
u.created_events.where("date >= ?", start_date.to_s)
u.created_events
search.events(u.created_events)
show-model Image
q
atom .
u.followers
u = User.find 7
a.destroy_all
a.destroy
a = [1, 2, 3, 4]
[1, 2, 3, 4]
u.leaders
u.leaders.find 7
u = User.find 9
show-model Followship
show-model Followships
v.embed_code iframe_attributes:{:allow_fullscreen}
v.embed_code iframe_attributes:{allow_fullscreen: true}
v.embed_code(fullscreen: true)
v.embed_code(allow_fullscreen: true)
v.embed_code allow_fullscreen: true
v.embed_code
v = VideoInfo.new('https://vimeo.com/53864769')
v = VideoInfo.new(https://vimeo.com/53864769)
v.errors.messages.each { |error| error.last.each {|msg| puts msg} }
v.errors.messages.each { |error| puts error }
v.errors.messages.first
v.errors.messages
v.errors
v.save
v.errors
v = Video.new(url: '', api_data: true, user_id: 9)
exit
v.errors.messages
v.errors[:messages]
v.errors[:base]
v.errors.base
v.errors
v.errors.full_messages
v.save
v = Video.new(url: '', api_data: true, user_id: 9)
v.provider
v = VideoInfo.new('https://vimeo.com/53864769')
v = VideoInfo.new(url: 'https://vimeo.com/53864769')
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
v.provider
v.provider?
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
VideoInfo.provider_api_key
VideoInfo.providers
VideoInfo.new('a')
v = Video.new(url: '', api_data: true, user_id: 9)
exit
v.errors
v
v.save
v = Video.new(url: '', api_data: true, user_id: 9)
v.persisted?
v
v.destroy
v
v.save
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v
v.save
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v
v.set_video_data
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v
v.set_video_data
v.set_data
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v.errors
v.save
v.valid?
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true)
exit
params
video_params
v.api_data
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true)
v = Video.new(ur: 'https://vimeo.com/53864769', api_data: true)
exit
q
VideoInfo.
v = VideoInfo.new('https://www.google.es/search?client=ubuntu&channel=fs&q=rails+how+to+execute+js+function&ie=utf-8&oe=utf-8&gfe_rd=cr&ei=paHzWJCtGOWJ8QfjhrFI#channel=fs&q=rails+javascript+disabled+links+when+input+check')
v.embed_code
v.embed_url
Time.at(d).utc.strftime('%H:%M:%S')
Time.at(d)
d = v.duration
v = VideoInfo.new('https://vimeo.com/61354749')
show-model Video
v.duration
v.title
v = VideoInfo.new('https://vimeo.com/61199700')
v.duration
v.embed_code
v.video_id
v.title
v
v = VideoInfo.new("https://vimeo.com/61199700")
t = Time.at(201)
t = (Time.now + 201) - Time.now
t = Time.now + 201
t.hour
t.utc
t = Time.at(201)
Time.at(201).utc.strftime("%M:%S")
Time.at(201).utc.strftime("%H:%M:%S")
Time.at(201).strftime("%H:%M:%S")
Time.at(201)
201.seconds
201.second
201.minute
201.minutes
Time.parse('201')
Time.parse(201)
Time.new(201)
a.downcase
a.lowercase
a.lowcase
a = "aASsDa"
show-model Video
exit
u.profile_page_videos
u = User.find 7
exit
sc.get('/oembed', url: 'https://soundcloud.com/xisco-iglesias/russian-subway-dogs-12212012')
sc.get('/oembed', url: 'http://soundcloud.com/forss/flickermood')
get('/oembed', url: 'https://soundcloud.com/xisco-iglesias/russian-subway-dogs-12212012')
sc.display
sc.refresh_token
sc.access_token
get('/oembed', url: 'http://soundcloud.com/forss/flickermood')
sc.
sc = SoundCloud.new client_id: 'xisco-iglesias'
SoundCloud.new client_id: 'xisco-iglesias'
SoundCloud.new
ASDas
SoundCloud
"a".html_safe
v.title
v = VideoInfo.new("https://www.youtube.com/watch/?v=Tgcc5V9Hu3g")
v.title
exit
v.title
v = VideoInfo.new("https://www.youtube.com/watch/?v=Tgcc5V9Hu3g")
v.title
v = VideoInfo.new("https://www.youtube.com/watch/?v=Tgcc5V9Hu3g")
v.title
v.description
v.data
v
v.duration
v
v.provider
v = VideoInfo.new("https://www.youtube.com/watch/?v=Tgcc5V9Hu3g")
VideoInfo.provider_api_keys
exit
v.title
v = VideoInfo.new("https://www.youtube.com/watch/?v=Tgcc5V9Hu3g")
VideoInfo
exit
ENV["VIMEO_API_KEY"]
v.embed_code
v.thumbnail
v.title
v = VideoInfo.new("http://vimeo.com/898029")
thumbnail
v.
v.embed_code
v = VideoInfo.new("https://www.youtube.com/watch/?v=Tgcc5V9Hu3g")
v = VideoInfo.new("https://www.youtube.com/watch/Tgcc5V9Hu3g")
