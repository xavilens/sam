continue
next
continue
exception
next
continue
@message
next
@title
title
next
delete_member_user
next
@member
next
continue
next
continue
next
continue
next
continue
next
Conversation.add_member_conversation(current_user.id, other_user.id)
other_user
next
continue
next
continue
next
continue
next
continue
exception
next
params
continuenext
next
continue
@member.valid?
@member
next
continue
next
continue
@conv.errors
next
continue
@conv.errors
@conv
next
@conv
next
continue
next
continue
exception
next
continue
next
@member.member_instruments
@member.member_instrument
@member
next
continue
@member.member_instruments
continue
@member.member_instruments.instrument
@member.member_instruments
@member
continue
next
continue
next
continue
exception
next
member
next
params[:type]
continue
member.instruments
member.members_instruments.size
member.members_instruments
member
instruments
continue
user.members_history.decorate
user.members.decorate
user.members
next
continue
@member.join_date.strftime("%d/%m/%Y")
@member.join_date
@member
continue
exception
next
continue
next
continue
exception
next
exit
params
continue
Member
show-model Member
exception
nexte
continue
member_params
continue
exception
next
continue
exception
next
exit
continue
reload!
continue
next
actual_user
continue
fa_icon('user-minus')
next
continue
e
next
type
continue
exception
next
continue
next
continue
exception
next
continue
message = @message
message = @mensaje
mensaje = @mensaje
type
@message
message
title
continue
conversation.messages.first.body
conversation.messages.first
continue
conversation.messages.first.body
conversation.messages.first
conversation
conversation.valid?
continue
conv.messages.first
m = conv.messages.first
conv.messages.first
continue
conversation.valid?
conversation
continue
conv.messages.first
conv.messages.first.set_body @from_user
conv.errors
conv.save
conv.valid?
next
message_body
next
message_body
next
instrument
self.instrument
next
conv.messages.first.instrument.name
conv.messages.first.instrument
conv.messages.first
next
conv.messages.first.instrument
conv.messages.first
conv.messages
conv
continue
exception
next
continue
conversation.messages
conversation.message
conversation.valid?
conversation
next
nexty
continue
next
continue
exception
next
continue
exception
next
continue
nextexception
next
continue
exception
next
conv
next
continue
next
continue
next
continue
exception
next
self
self.instrument
continue
exception
next
user
next
instrument
next
band
next
continue
exception
next
exit
band.name
band.to_s
band.user
band
next
continue
exception
next
member.band_id
member.band
member
next
exit
params[:band]
params
exit
continue
next
e
next
e
next
params
next
