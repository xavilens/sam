continue
controller
continue
action
controller
continue
controller
continue
controller
continue
controller
continue
action
controller
action
continue
controller
continue
action
controller
continue
next
continue
next
continue
res
next
res
p_action
next
params
p_controller
next
continue
active_page('users','edit_knowlegdes')
params
active_page('users','edit_knowlegdes')
active_page('users','edit_knowlegde')
continue
next
mk_key
continue
next
continue
next
continue
mk_params[:musician_knowledges_attributes].each do |mk_k, mk_v| puts "#{mk_k}, #{mk_v}" end
mk_params[:musician_knowledges_attributes].each do |mk_k, mk_v|
mk_params[:musician_knowledges_attributes] do |mk_k, mk_v|
mk_params[:musician_knowledges_attributes]
mk_params
continue
mk_params.require(:musician_knowledges_attributes).each
mk_params.require(:musician_knowledges_attributes).each do |mk|
mk_params[:musician_knowledges_attributes].each do |mk|
mk_params[:musician_knowledges_attributes].each
mk_params[:musician_knowledges_attributes].size
mk_params[:musician_knowledges_attributes]
next
index
next
continue
next
continue
next
continue
musico
next
@user
continue
@musician
@user
musico
continue
musico.musician_knowledges
musico.update(update_musician_params)
musico = Musician.last
musico.musician_knowledges
musico.update(update_musician_params)
musico = Musician.first
Musician.all
musico.user
musico = Musician.last
update_musician_params
continue
next
continue
@musician.update(update_musician_params)
@musician.user
@musician
update_musician_params
params
continue
mk[1][:instrument_id]
mk
continue
next
continue
for mkp.each do |mk| puts "#{mk[:instrument_id]}, #{mk[:level_id]}" end
mkp.first
mkp.first[:instrument_id]
mkp[:instrument_id]
mkp = mk_params[:musician_knowledges_attributes]
mk_params = mkp[:musician_knowledges_attributes]
mk_params
next
continue
mk
mk_params
mk_params.delete mk
mk = mk_params['0']
mk_params
mk_params.delete '1'
mk_params['1'].delete
mk_params.class
mk_params
mk_params = mk_params['1'].delete
mk_params
mk_params = mk_params[mk].delete
mk_params = update_musician_params.require(:musician_knowledges_attributes)
mk_params
mk_params = mk_params.delete(mk)
mk_params
mk_params.delete mk
mk_params.delete :mk
mk_params['0'].delete
mk_params['0'].delte
mk_params.delete(mk)
mk = mk_params['0']
m√± = mk_params['0']
mk_params['0']
mk_params[0]
mk_params.get(0)
mk_params(0)
mk_params
mk_params[0]
mk_params.push(0)
mk_params.remove(0)
mk_params.delete(0)
mk_params
mk_params = update_musician_params.require(:musician_knowledges_attributes)
update_musician_params.require(:musician_knowledges_attributes)
update_musician_params
params
continue
@musician.update(update_musician_params)
update_musician_params
@musician.update(update_musician_params)
@musician.update()
@musician
mu
@musician
@musician.update(update_musician_params)
@musician
musico.musician_knowledges
musico.update(update_musician_params)
musico = Musician.first
update_musician_params
params
param
continue
param_musico = param1.require(:musician_knowledges_attributes).
param_musico
param_musico = param1.require(:musician_knowledges_attributes).delete(0)
param1.require(:musician_knowledges_attributes)
param1.require(:musician_knowledges_attributes).delete(0)
param1.require(:musician_knowledges_attributes)
param1
musico.errors
musico.update(param1)
musico.update
musico.user
musico
musico = Musician.first
m = Musician.first
Musician.first
m = Musician.first
param1
param1 = update_musician_params
update_musician_params
next
continue
params.require(:musician)
params
update_musician_params
next
continue
params
continue
next
continue
next
continue
@musician.musician_knowledges.build
@musician = @user.profile
continue
@musician = @user.profile
@user
@musician
continue
params[:add_musician_knowledge]
continue
params
params[:add_musician_knowledge]
continue
@musician.musician_knowledges.size
continue
@musician.musician_knowledges.last == mk
continue
@musician.musician_knowledges.last == mk
continue
@musician.musician_knowledges.last == mk
continue
@musician.musician_knowledges.last == mk
continue
@musician.musician_knowledges.last == mk
@musician.musician_knowledges.last
@musician.musician_knowledges
f.field_for
f.simple_field_for
f.simple_form_for
continue
next
mk
f
:musician_knowledges
continue
next
@user.musician?
@musician
@user.musician?
@user.band?
current_user
@user
@edit
continue
next
continue
next
params
continue
Conversation.my_conversations(9).joins(:messages).where("messages.body like :text", text: '%'+search_params[:body]+'%').distinct(:id)
Conversation.my_conversations(9).joins(:messages).where("messages.body like :text", text: '%#{search_params[:body]}%').distinct(:id)
Conversation.my_conversations(9).joins(:messages).where("messages.body like :text", text: '%#{search_params}%').distinct(:id)
Conversation.my_conversations(9).joins(:messages).where("messages.body like :text", text: '%asd%').distinct(:id)
search_params
params
continue
params
continue
params
continue
params
continue
next
User.find(new_params[:to_user])
