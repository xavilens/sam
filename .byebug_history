c
n
exit
n
c
exception
n
@conversation
n
c
participant
c
@conversation.conversation_related.new
@conversation.conversation_related
n
exit
self.conversation_related.new
self.conversation_related
self
self.ancestor
self.parent
super
self.super
self
super.conversation_related.build(conversationable: event)
self.conversation_related.build(conversationable: event)
self.conversation_related.build
conversation_related.build
conversation_related
self.conversation_related
.conversation_related
self
c
event
c
event
n
event
c
event
self.event = Event.find 3
event
n
event = Event.find 3
event
user_1
c
@conversation.event
@conversation.event=event
@conversation.event
@conversation
n
event
c
event = Event.find 3
event
c
user_1.name
user_1
c
exception
n
c
n
c
n
c
Conversation.participant_related_conversations(current_user.id, participant.id)
Conversation.add_participant_conversation(current_user.id, participant.id)
n
c
Conversation.add_participant_conversation(current_user.id, participant.id)
exception
n
c
n
c
n
c
exception
n
c
n
c
params
c
s
n
c
participants
n
c
exit
params
show-model Event
Time.at("23:30")
Time.now.at("23:30")
Time.new("23:30")
Event.all
e.update(event_status_id: 1)
e = Event.last
e.update(event_status_id: 1)
e = Event.first
Event.first
Event.all
EventJobs.close_passed_events
exit
EventJobs.close_passed_events
exit
EventJobs.close_passed_events
EventJobs.connect
EventJobs
exit
EventJobs.close_passed_events
EventJobs
exit
passed_events = Event.where(event_status: opened).where("date <= ?", yesterday)
yesterday = Date.yesterday
opened = EventStatus.find_by_name('Abierto')
e
e.update(event_status: cerrado)
cerrado = EventStatus.find_by_name('Cerrado')
e = Event.find 1
Event.where(event_status_id: EventStatus.find_by_name('Abierto').id).where("date <= ?", Date.yesterday)
s = EventStatus.find_by_name('Abierto')
s = EventStatus.find(name: 'Abierto')
s = EventStatus.find(name:'Abierto')
Event.where(event_status_id: EventStatus.find(name:'Abierto')).where("date <= ?", Date.yesterday)
Event.where(event_status_id: EventStatus.find(name:'Abierto').id).where("date <= ?", Date.yesterday)
EventStatus.all
Event.where(event_status_id: EventStatus.find(name:'activo').id).where("date <= ?", Date.yesterday)
Event.where(event_status_id: EventStatus.find(name:'Activo').id).where("date <= ?", Date.yesterday)
Event.where(date: d)
Events.where(date: d)
d = Date.yesterday
Date.yesterday
exit
search.name.present?
u.created_events.where("date >= ?", start_date.to_s(:default))
u.created_events.where("date >= ?", start_date.to_s)
u.created_events
search.events(u.created_events)
show-model Image
q
atom .
u.followers
u = User.find 7
a.destroy_all
a.destroy
a = [1, 2, 3, 4]
[1, 2, 3, 4]
u.leaders
u.leaders.find 7
u = User.find 9
show-model Followship
show-model Followships
v.embed_code iframe_attributes:{:allow_fullscreen}
v.embed_code iframe_attributes:{allow_fullscreen: true}
v.embed_code(fullscreen: true)
v.embed_code(allow_fullscreen: true)
v.embed_code allow_fullscreen: true
v.embed_code
v = VideoInfo.new('https://vimeo.com/53864769')
v = VideoInfo.new(https://vimeo.com/53864769)
v.errors.messages.each { |error| error.last.each {|msg| puts msg} }
v.errors.messages.each { |error| puts error }
v.errors.messages.first
v.errors.messages
v.errors
v.save
v.errors
v = Video.new(url: '', api_data: true, user_id: 9)
exit
v.errors.messages
v.errors[:messages]
v.errors[:base]
v.errors.base
v.errors
v.errors.full_messages
v.save
v = Video.new(url: '', api_data: true, user_id: 9)
v.provider
v = VideoInfo.new('https://vimeo.com/53864769')
v = VideoInfo.new(url: 'https://vimeo.com/53864769')
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
v.provider
v.provider?
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
VideoInfo.provider_api_key
VideoInfo.providers
VideoInfo.new('a')
v = Video.new(url: '', api_data: true, user_id: 9)
exit
v.errors
v
v.save
v = Video.new(url: '', api_data: true, user_id: 9)
v.persisted?
v
v.destroy
v
v.save
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v
v.save
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v
v.set_video_data
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v
v.set_video_data
v.set_data
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true, user_id: 9)
exit
v.errors
v.save
v.valid?
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true)
exit
params
video_params
v.api_data
v = Video.new(url: 'https://vimeo.com/53864769', api_data: true)
v = Video.new(ur: 'https://vimeo.com/53864769', api_data: true)
exit
q
VideoInfo.
v = VideoInfo.new('https://www.google.es/search?client=ubuntu&channel=fs&q=rails+how+to+execute+js+function&ie=utf-8&oe=utf-8&gfe_rd=cr&ei=paHzWJCtGOWJ8QfjhrFI#channel=fs&q=rails+javascript+disabled+links+when+input+check')
v.embed_code
v.embed_url
Time.at(d).utc.strftime('%H:%M:%S')
Time.at(d)
d = v.duration
v = VideoInfo.new('https://vimeo.com/61354749')
show-model Video
v.duration
v.title
v = VideoInfo.new('https://vimeo.com/61199700')
v.duration
v.embed_code
v.video_id
v.title
v
v = VideoInfo.new("https://vimeo.com/61199700")
t = Time.at(201)
t = (Time.now + 201) - Time.now
t = Time.now + 201
t.hour
t.utc
t = Time.at(201)
Time.at(201).utc.strftime("%M:%S")
Time.at(201).utc.strftime("%H:%M:%S")
Time.at(201).strftime("%H:%M:%S")
