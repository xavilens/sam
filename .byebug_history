c
messages_box_path
c
outbox_messages_path(params)
inbox_messages_path(params)
messages_path(params)
params
c
exit
params
User.find(9).events
Event.group(:date)
Video.all
e = Event.first
e
e = Event.first
e.save
e.event_status_id = 1
e = Event.first
e.save
e.event_status_id = 1
e = Event.first
a
a = u.participated_events & u.member_events
u.participated_events & u.member_events
u.member_events
u.participated_events
u.created_events & u.participated_events
u2.participated_events
u2.participant_events
u2.member_events
u2.created_events
u2 = User.find 9
u.member_events
u.created_events & u.member_events
u.created_events
u.events_created
u = User.find 7
ep.save
ep.valid?
ep = EventParticipant.new(event_id: 2, participant_id: 9)
ep.valid?
ep = EventParticipant.new(event_id: 2, participant_id: 9)
exit
ep.valid?
ep = EventParticipant.new(event_id: 2, participant_id: 9)
exit
ep.valid?
ep = EventParticipant.new(event_id: 2, participant_id: 9)
exit
ep.valid?
ep = EventParticipant.new(event_id: 2, participant_id: 9)
exit
ep.save
reload!
ep.save
reload!
ep.save
e.event_participants
e = Event.find 2
ep.valid?
ep = EventParticipant.new(event_id: 2, participant_id: 9)
EventParticipant.new(event_id: 2, participant_id: 9)
EventParticipant.create(event_id: 2, participant_id: User.find(9))
EventParticipant.create(event_id: 2, participant_id: 9)
show-model EventParticipant
u.created_events & u.member_events
u.member_events
u.created_events
u.created_events & u.member_events
u = User.find 7
u = User.find 9
[1, 2, 3, 4] & [1, 3]
exit
@finish_date
@calendar.last_event_day
@calendar.fist_event_day
reload!
@calendar.fist_event_day
@calendar.fist_event_date
@calendar.first_event_day
@calendar.first_event_date
@start_date
@start_day
[].reduce
[].reruce
asda
[].
['a'].require_if { |a| a == 'a' }
['a'].delete_if { |a| a == 'a'  }
['a'].delete_if { |a| a == 'e'  }
['a'].delete_if 
exit
c
@calendar.events
c
[].none?
['a'].any?
[1].any?
[a].any?
[].any?
Date.today == Date.tomorrow
Date.today == nil
exit
)
model.order(:date
model
exit
find_events user.member_events
search.events(user.member_events)
user.member_events
search.events(user.member_events)
search.events(user.created_events)
user.member_events
user.created_events
user
@user
@events
u.followers
u.leaders
reload!
u.leaders.order(followships: {id: :desc})
u = User.find 9
u.leaders.order('followships.id': :desc)
u.leaders.order(followships.id: :desc)
u.leaders.order(followships: :desc)
u.leaders.order(followships: {:desc})
u.leaders.order(followships: {id: :desc})
u.followships
u.followers.followships
u.followers
u = User.find 9
u
u.followships
u.followship
i.save
i.title = 'asdasdasd asd asda sda sdas d'
i.save
i.name = 'asdasdasd asd asda sda sdas d'
i = Image.find 9
sns.send('facebook')
sns.avaliables
sns = SocialNetworksSet.find 48
exit
sns.avaliables
sns = u.social_networks_set
u = User.find 9
reload!
u.social_networks
u.social_networks_set
u = User.find 9
u.social_networks_set
u.social_networks
u = User.find 7
exit
u.social_networks
u = User.find 7
show-model SocialNetworksSet
reload!
show-model SocialNetworksSet
exit
show-model SocialNetworksSet
reload!
show-model SocialNetworksSet
SocialNetworksSet
sns.avaliables
sns = SocialNetworksSet.find 41
sns = SocialNetworksSet.find 40
sns = SocialNetworksSet.find 39
sns = SocialNetworksSet.first
sns = SocialNetworksSet.find 6
sns = SocialNetworksSet.find 5
sns = SocialNetworksSet.find 4
sns = SocialNetworksSet.find 3
sns = SocialNetworksSet.find 2
sns = SocialNetworksSet.find 1
sns = SocialNetworkSet.find 1
exit
@calendar.events
c = Conversation.none
c = Conversation.search(9, '')
c = Conversation.find 11
User.page(2).decorate
User.page().decorate
User.page(1)
u.class.name.underscore
u.class.name.sn
u.class.name.snake
u.class.name
a
u.class.name+
u.class_eval
u.class
u.class_name
u = UserSearchForm.new
BandStatus.all
reload!
BandStatus.all
exit
users
exit
c
next
users
User.bands.genres(1..30)
reload!
User.bands.genres(1..30)
reload!
show-model Band
User.bands.genres(1..30)
reload!
User.bands
User.bands.genres(1..30)
reload!
User.bands.genres(1..30)
exit
User.bands.genres(1..30)
reload!
User.musicians.instruments(1..30)
reload!
User.musicians.instruments(1..30)
User.musicians.instruments(1..3)
User.musicians.instruments([1,2,3])
reload!
User.musicians.instruments([1,2,3])
User.musicians.joins("INNER JOIN musicians ON profileable_id = musicians.id").joins("INNER JOIN musician_knowledges ON musician_knowledges.musician_id = musicians.id").where("musician_knowledges.instrument_id in :instrument", instrument: [1,2,3])
User.musicians.joins("INNER JOIN musicians ON profileable_id = musicians.id").joins("INNER JOIN musician_knowledges ON musician_knowledges.musician_id = musicians.id").where("musician_knowledges.instrument_id in :instrument", [1,2,3])
User.musicians.joins("INNER JOIN musicians ON profileable_id = musicians.id").joins("INNER JOIN musician_knowledges ON musician_knowledges.musician_id = musicians.id")
q
User.musicians.joins("INNER JOIN musicians ON profileable_id = musicians.id").joins(INNER JOIN musician_knowledges ON musician_knowledges.musician_id = musicians.id")
User.musicians.joins("INNER JOIN musicians ON profileable_id = musicians.id")
User.musicians.includes(:profileable).includes(:musician_knlowdges)
User.musicians.includes(:profileable)
User.musicians.includes(:profileable).includes(:musician_knlowdges)
User.musicians.includes(:musicians)
User.musicians.includes(:musicians).includes(:musician_knlowdges)
User.musicians
Address.bands
Address.musicians
reload!
Address.musicians
reload!
Address.musicians
Address.users.joins("INNER JOIN users ON addresseable_id = users.id").where(users: {profileable_type: 'Musician'})
Address.users.joins("INNER JOIN users ON addresseable_id = users.id")
ax
das
qasdas
q
Address.users.joins("INNER JOIN users ON addresseable_id = users.id)
Address.users.joins(", users ON addresseable_id = users.id")
Address.users.joins(",'users' ON addresseable_id = users.id")
Address.users.joins("'users' ON addresseable_id = users.id")
Address.users.joins("users ON addresseable_id = users.id")
")
Address.users.joins("users ON addresseable_id = users.id)
