continue
next
continue
exit
continue
params[:user][:images_attributes]["0"]
params[:user][:images_attributes]["1489177822528"]
params[:user][:images_attributes][:1489177822528]
params[:user][:images_attributes][:image]
params[:user][:images_attributes][0]
params[:user][:images_attributes].size
params[:user][:images_attributes]
params[:user]
params
pry
image_create_params
processed
next
continue
next
continue
next
continue
next
continue
@user.images
@user
next
@user.imagesnext
continue
next
@user.images
@user
next
exit
params
pry
exit
params
exit
params
exit
@user.images
@user
params
pry
exit
self
pry(params)
continue
exception
next
continue
next
exit
self.images.first.image
self.images.first
self.images..image
self.images.image
self.images.image_url
self.images
self
pry(@user)
next
continue
exit
self
image_create_params.each do |image_param| pry(image_param)  end
image_create_params.each do puts '1' end
image_create_params.size
image_create_params.sizer
image_create_params[:image]
image_create_params
continue
exception
next
exit
image_create_params
@user.images
pry
next
exit
next
pry
exit
params
u.images.any?
u.images
u.images.size
u = User.find(7)
e.creator
e = Event.last
exit
e.creator_id
e.creator
e.author_id
e.author
e = Event.last
show-model Image
u.social_networks
u.social_networks_set.exist
u.social_networks_set.exists
u.social_networks_set.blank?
u.social_networks_set.exists?
u.social_networks_set.exist?
u.social_networks_set.any?
u.social_networks_set
u.events.any?
u = User.last
e1.save
e1.valid?
e.valid?
e1 = Event.new(name: 'Prueba 2', description: 'Descripción', date: Date.today, time: Time.now, event_status_id: 2, street: 'Calle falsa 1', city: 'Huelva', state: 'Andalucía', country: 'España', creator_id: User.find(7), event_type_id: 2)
e1 = Event.new(name: 'Prueba 2', description: 'Descripción', date: Date.today, time: Time.now, event_status_id: 2, street: 'Calle falsa 1', city: 'Huelva', state: 'Andalucía', country: 'España', creator_id: 7, event_type_id: 2)
e = Event.first
d.strftime(:default)
d
d.at
d_at
I18n.translate(d)
d.to_s(:default)
I18n.t :date
I18n.t
I18n
d
d.to_s(:long)
d.to_s(:format)
d.to_s
d = Date.today
exit
I18n.translate(d)
d.default
I18n.t(d.default)
I18n.t(d)
I18n.t(d.to_s(:short))
d.to_s(:short)
d.to_s(:default)
d.to_s(:long)
d.to_s
d = Date.today
exit
d.to_s(:long)
d.to_s
d
Date.today.to_s(:long)
d.day.in_words
d.day
d.day.to_s
d.day_in_words
d.day
d = Date.current
Date.today
Date.today.to_s
Date.today.to_s(:default)
Date.today.strfdate(:default)
Date.today.strftime(:default)
Date.today.strformat(:default)
Date.today.format(:default)
Time.zone.now
Time.zone
Time.zone.current
Date.zone.current
Date.zone.today
Date.current
Date.today
e.date_format
e.date
e = Event.first
e = event.first
exit
show-model Image
MemberInstrument.all
exit
u.events_all
u = User.find(7)
exit
u.events_all
u = User.find(7)
exit
show-model EventParticipant
u.events_all
u = User.find(7)
exit
u.events_all
u = User.find(7)
exit
ea = re << e
ea = re + e
e = u.events
re = u.reverse_events
u.reverse_events
u.events
u.events_all
u.reverse_events
u.events
u = User.find(7)
exit
u.reverse_events
u.events
u = User.find(7)
exit
u.reverse_events
u.events
u = User.find(7)
exit
u.events
u = User.find(7)
exit
u.reverse_events
u.events
u = User.find(7)
exit
u.reverse_events
u.events
u = User.find(7)
e.save
e.street = "Calle falsa"
e.save
e.valid?
e.time = Time.now.strftime("%H:%M")
e.errors
e.save
e.valid?
e.event_type_id = 1
EventType.all
e.country = "España"
e.state = "Andalucía"
e.city = "Sevilla"
e.errors
e.erros
e.save
e.valid?
e = Event.new(name: 'Prueba', description: 'Descripcion', date: Date.today, event_status_id: 1, max_participants: 1, creator_id: User.find(7))
e = Event.new(name: 'Prueba', description: 'Descripcion', date: Date.today, event_status_id: 1, max_participants: 1, creator_id: 7)
show-model Event
e = Event.new(author_id: 7)
exit
u.social_networks.each do |sn| puts sn.name unless sn==u.social_networks.last puts '-------' end end
u.social_networks.each do |sn| puts sn.name unless sn.last? puts '-------' end end
u.social_networks.each do |sn| puts sn.name end
u.social_networks.each do |sn| put sn.name end
u.social_networks
u.instruments
u = User.last
md = MemberDecorator.new(m)
md = m.decorator
m = Member.last
mi.save
mi.valid?
mi = MemberInstrument.new(member_id: 6, instrument_id: 4)
exit
mi.valid?
reload!
mi.valid?
mi = MemberInstrument.new(member_id: 6, instrument_id: 4)
exit
